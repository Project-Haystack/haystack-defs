**************************************************************************
** title:      Meters
** author:     Brian Frank
** created:    26 Feb 2011
** copyright:  Copyright (c) 2015, Project-Haystack
** license:    Licensed under the Academic Free License version 3.0
**************************************************************************

Overview [#overview]
********************
The general problems addressed by the meter ontology are:
  - modeling meters
  - modeling submeters and their relationships
  - modeling the flow of energy
  - modeling equip and point loads on meters

Meters [#meters]
****************
Meters are modeled as `equip` entities with the `meter` tag along with
the phenomenon measured.  The following meter subtypes are defined:

  - `ac-elec-meter`
  - `dc-elec-meter`
  - `flow-meter`

Flow meters should always be tagged with the substance they are metering.
Common examples include:

  - `naturalGas` `meter`
  - `domestic` `water` `meter`
  - `chilled` `water` `meter`
  - `steam` `meter`

All meters must additionally define exactly one of these two tags:
  - `siteMeter`: marker applied to the main site level meter
  - `submeterOf`: Ref to parent meter

Electric Meters [#elecMeters]
*****************************
Haystack models AC and DC electric meters using `ac-elec-meter` and
`dc-elec-meter`.  There is support to model these meters and their points
for simple use cases (e.g., just a `demand` and `energy` point) and complex
use cases (e.g., three-phase AC power quality meters).  For a common
application involving electric utility data see the provided [example]`docHaystack::Meters#exampleUtilityApplication`.

Electricity meter points are described by combining tags from the lists
given below.  The tags in each set are mutually exclusive.  For example,
a point cannot have two primary quantities, or have both the `volt` and
`power` tags.

DC electrical measurements are described using a combination of the types
of tags below:
 1. `elec` marker tag
 2. Primary quantity
 3. `dc` marker tag
 4. Direction (if applicable)

AC electrical measurements are described using a combination of the types
of tags below:
 1. `elec` marker tag
 2. Primary quantity
 3. `ac` marker tag
 4. Characteristic of the primary quantity
 5. Direction (if applicable)
 6. Location

Note:  The primary quantity `freq` does not use tags to distinguish a
characteristic, direction, or location.

Primary Quantities for AC and DC measurements [#primaryQuantities]
==================================================================
Both `ac-elec-meter` and `dc-elec-meter` support measurements of the
following electrical primary quantities:
  - `power`: Instantaneously measured in "kW" units for 'dc' measurements.
  Instantaneously measured in "kW", "kVAR", or "kVA" units for 'ac'
  measurements depending on the characteristic `active`, `reactive`, or `apparent`.
  - `demand`: Measurements indicate an average of instantaneous power values over
  a defined time interval (e.g., 5, 15, or 30 minutes) and have the same units
  that are used for `power` measurements.
  - `energy`: Similar to `demand`, measurements indicate an average of
  instantaneous power values over a defined time interval (e.g., 60 minutes).
  Measured in "kWh" units for 'dc' measurements.  Measured in "kWh", "kVARh",
  or "kVAh" units for 'ac' measurements depending on the characteristic `active`,
  `reactive`, or `apparent`.
  - `volt`: Instantaneously measured in "V" units for both 'ac' and 'dc'
  measurements.
  - `current`: Instantaneously measured in "A" units for both 'ac' and
  'dc' measurements.

The following primary quantities apply only to AC electrical measurements:
  - `freq`: Instantaneously measured in "Hz" units.
  - `pf`: Instantaneously measured as a percentage of AC active power to
  AC apparent power.

Some electric meters log interval-based data, demand or energy, using a
monotonically increasing value in time.  The difference of these values
between two intervals is used to determine the actual value for an
interval.  Haystack distinguishes data logged this way using the
`hisTotalized` tag on the point entity.

Directions for AC and DC measurements [#directions]
===================================================
Some electric meters track and report electricity imported from the
electric grid separately from electricity exported to the electric grid.
The tags `import` and `export` differentiate these phenomenons. More
broadly, 'export' indicates electricity flowing toward the grid (in the
direction of the `siteMeter`), and 'import' indicates electricity flowing
toward the load.

These measurements register electricity transfer, involving the primary
quantities `current`, `power`, `demand`, and `energy` only, in their
associated direction and always have positive values.

- For instantaneous measurements (i.e., 'current' and 'power'),
  'import' and 'export' are mutually exclusive.  One will report a positive
  value and the other will report zero.

- For interval-based measurements (i.e., 'demand' and 'energy'), it is
  possible that both 'import' and 'export' may report a positive quantity for
  that interval, which means that some energy flowed in each direction
  during that interval.

The `net` tag indicates the difference between 'import' and 'export':

  net = import - export

Haystack uses the load convention for net electricity flow.

- Positive net quantities indicates electricity consumed.
- Negative net quantities indicates electricity produced.

Note: Direction related tags do not apply to 'angle', 'imbalance', and 'thd'
characteristics used to describe current and voltage.

Characteristics of AC Measurements [#acCharacteristics]
=======================================================
AC power, demand, and energy measurements are further qualified by
characteristics:
  - `active`: Describes real work being performed.  Haystack's standard
  unit of active power and active demand is "kW".  Haystack's standard
  unit of active energy is "kWh".
  - `reactive`: Describes electricity circulated in an AC electrical
  system that does not result in real work being performed.  Haystack's
  standard unit of reactive power and reactive demand is "kVAR".
  Haystack's standard unit of reactive energy is "kVARh".
  - `apparent`: Describes the overall magnitude of energy movement.
  Haystack's standard unit of apparent power and apparent demand is "kVA".
  Haystack's standard unit of apparent energy is "kVAh".

AC voltage and current measurements are further qualified by the following
characteristics:
  - `magnitude`: magnitude (assumed as default)
  - `angle`: phase angle, typically measured in "deg"
  - `imbalance`: imbalance between phases, measured in "%"
  - `thd`: total harmonic distortion, measured in "%"

Similarly AC power factor measurements are further qualified using a
`pfScope` choice:
  - `pfTrue`: True power factor
  - `pfDisplacement`: Displacement power factor
  - `pfDistortion`: Distortion power factor

Note:  The primary quantity 'freq' does not have characteristic related tags.

Locations for AC Measurements [#acLocations]
============================================
Generic tags are used to describe three types of 'ac' electrical measurements that do
not involve aggregation of multiple measurements:
  - `elecLine`: for electrical line measurements "L1", "L2", and "L3"
  - `elecLineToLine`: for electrical line-to-line measurements "L1-L2", "L2-L3", and
  "L3-L1"
  - `elecLineToNeutral`: for electrical line-to-neutral measurements "L1-N", "L2-N",
  and "L3-N"

Non-aggregated 'ac' electrical measurement locations are qualified by:
  - `lineVolt`: 'elecLineToLine'
  - `phaseVolt`: 'elecLineToNeutral'
  - `lineCurrent`: 'elecLine'
  - `phaseCurrent`: 'elecLineToLine'
  - `linePower`: 'elecLineToLine'
  - `phasePower`: 'elecLine'
  - `linePf`: 'elecLineToLine'
  - `phasePf`: 'elecLine'
  - `lineEnergy`: 'elecLineToLine'
  - `phaseEnergy`: 'elecLine'
  - `ground`: for electrical current measurement of the electrical ground
  conductor
  - `neutral`: for electrical current measurement of the electrical neutral
  conductor

Note: In the future 'phaseDemand' and 'lineDemand' tags may be defined.  For now
'phasePower' or 'linePower' tags may be used to describe point entities with the
'demand' tag.

Aggregated three-phase 'ac' electrical measurement locations are qualified by:
  - `lineAvg`: When applied to a point entity with the 'current' tag, indicates the
  average of the values for the 'current' primary quantity characteristic at all
  locations defined in 'elecLine'. When applied to point entities with the 'volt',
  'power', 'pf', or 'energy' tags, indicates the average of the values for the primary
  quantity's characteristic at all locations defined in 'elecLineToLine'.
  - `phaseAvg`: When applied to a point entity with the 'volt' tag, indicates the
  average of the values for the 'volt' primary quantity characteristic at all locations
  defined in 'elecLineToNeutral'. When applied to a point entity with the 'current'
  tag, indicates the average of the values for the 'current' primary quantity
  characteristic at all locations defined in 'elecLineToLine'. When applied to point
  entities with the 'power', 'pf', or 'energy' tags, indicates the average of the
  values for the primary quantity's characteristic at all locations defined in
  'elecLine'.
  - `total`: Applies only to point entities with 'power', 'demand', or 'energy' tags.
  Indicates the sum of the values for the primary quantity's characteristic at all
  locations defined in 'elecLine'.

Aggregated split-phase 'ac' electrical measurement locations are qualified by:
  - `lineAvg`: When applied to a point entity with the 'current' tag, indicates the
  average of the values for the 'current' primary quantity characteristic at the "L1"
  and "L2" locations defined in 'elecLine'.
  - `phaseAvg`: When applied to a point entity with the 'volt' tag, indicates the
  average of the values for the 'volt' primary quantity characteristic at the "L1-N"
  and "L2-N" locations defined in 'elecLineToNeutral'. When applied to point entities
  with the 'power', 'pf', or 'energy' tags, indicates the average of the values for the
  primary quantity's characteristic at the "L1" and "L2" locations defined in
  'elecLine'.
  - `total`: Applies only to point entities with 'power', 'demand', or 'energy' tags.
  Indicates the sum of the values for the primary quantity's characteristic at the "L1"
  and "L2" locations defined in 'elecLine'. This tag is also used in conjunction with
  the 'elecLineToLine' tag that has a value "L1-L2" to help describe the complete flow
  of electricity in a common way for three-phase and split-phase electrical systems.

Note:  The primary quantity 'freq' does not have location related tags.

An Example Utility Application [#exampleUtilityApplication]
===========================================================
Many electric utilities commonly use three AC electricity measurements for
computing a monthly bill:
  1. Peak active demand (kW)
  2. Total energy consumption (kWh)
  3. Peak apparent demand (kVA)

It might be desired to monitor these data points using a granular interval
(e.g., 5 minutes) on a 'siteMeter' to better understand or help validate
these metrics used by the electric utility for billing.  In some cases the
electric utility might offer this interval data.  Otherwise customer owned
electric metering may be used to obtain it.

At a site with a 3-phase electric utility service, these data points would
be modeled as follows:
  1. For peak active demand - a point with the tags 'ac', 'total', 'active',
  'import', and 'demand'
  2. For total energy consumption - a point with the tags 'ac', 'total',
  'active', 'import', and 'energy'
  3. For peak apparent demand - a point with the tags 'ac', 'total', 'apparent',
  'import', and 'demand'

Also, all three of these data points should have a 'hisMode' tag with a value
of 'consumption' applied to indicate they model interval based data.

Flow Meters and Thermal Meters [#flowMeters]
********************************************
Flow meters measure flow rate and total volume of fluids.  Thermal
meters (sometimes called BTU meters) also use temperature sensors
and can provide power and energy calculations.  Points for flow
meters include:

  - `flow`: rate of volume flowing through the meter per unit time
  - `volume`: total volume consumption of the meter
  - `power`: energy consumed per unit time such as "BTU/h"
  - `energy`: energy consumption such as "BTU"

Note that thermal meters should use the same `power` and `energy` tags
as elec meters.

Flow meters must always be tagged with the fluid they are metering.  For
example a natural gas meter must be tagged with `naturalGas`.  If a meter
measures flow/volume then add the `flow` tag.  If the meter measures
power/energy then add the `thermal` tag.

Examples:

  // Natural gas meter
  id: @gasMeter
  naturalGas
  flow
  meter
  equip

  // Steam thermal meter
  id: @steamMeter
  steam
  thermal
  flow
  meter
  equip

Energy Flow to Loads [#energyFlows]
***********************************
We use the suite of '<phenomenon>Ref' tags to model the relationship of
energy flows from the meters to their load.  Commonly used relationship
tags include:

  - `elecRef`: model flow of electricity
  - `naturalGasRef`: model flow of natural gas
  - `chilledWaterRef`: model flow of chilled water for cooling
  - `hotWaterRef`: model flow of hot water for heating
  - `steamRef`: model flow of steam for heating

These tags are placed on the loads and reference their upstream meter.
For example, a boiler would use the `naturalGasRef` to reference its upstream
meter as follows:

  id: @gasMeter
  naturalGas
  flow
  meter
  equip

  id: @boiler
  steam
  boiler
  equip
  naturalGasRef: @gasMeter

Example Model [#exampleModel]
*****************************
Let's illustrate a more complete example using a "tree" of meters and loads:

  Main Elec Meter
   +- Luminaire (equip load)
   +- HVAC Elec Submeter
       +- RTU-1 (equip load)
           +- Fan (point load)
           +- DischargeTemp (not a load)
       +- RTU-2 (equip load)
           +- Fan (point load)
           +- DischargeTemp (not a load)

The entities and their tags would look like this:

  id:@A, dis: "Main Elec Meter", ac, elec, meter, siteMeter, equip
         dis: "Main Elec Meter Demand", equipRef @A, elec, power, unit:"kW", sensor, point, ...
         dis: "Main Elec Meter Consumption", equipRef:@A, elec, energy, unit:"kWh", sensor, point, ...

  id:@B, dis: "Luminaire", equip, elecRef:@A, luminaire

  id:@C, dis: "HVAC Elec Submeter", ac, elec, meter, submeterOf:@A, equip
         dis: "HVAC Elec Submeter Demand", equipRef:@C, elec, power, unit:"kW", sensor, point, ...
         dis: "HVAC Elec Submeter Consumption", equipRef:@C, elec, energy, unit:"kWh", sensor, point, ...

  id:@D, dis: "RTU-1", equip, elecRef:@C, ahu
         dis: "RTU-1 Fan", equipRef:@D, elecRef:@C, fan, cmd, point, ...
         dis: "RTU-1 DA Temp", equipRef:@D, discharge, air, temp, sensor, point, ...
  id:@E, dis: "RTU-2", equip, elecRef:@C, ahu
         dis: "RTU-2 Fan", equipRef:@E, elecRef:@C, fan, cmd, point, ...
         dis: "RTU-2 DA Temp", equipRef:@E, discharge, air, temp, sensor, point, ...

In the example above we have a top-level main electrical meter with
the id '@A'.  Note it is tagged as `ac-elec-meter` to model an AC electric
meter.  It is also tagged as `siteMeter` to indicate its the main site-level meter.
It has two associated points for power (kW) and energy (kWh).

Next, since we don't have a lighting submeter, the lighting load references
the main meter directly via its `elecRef` tag.

After that, we have an HVAC submeter with the id '@C'.  Note it
is tagged as `ac-elec-meter` also.  But it is not a `siteMeter`; instead it is
associated as a submeter of the main meter using the `submeterOf` tag.  You can
model submeter trees of arbitrary depth (submeters of submeters).  It also has
two points for kW and kWh.

Lastly, we have three electrical equipment loads defined.  The two RTUs are associated
with HVAC submeter via `elecRef` which references the HVAC submeter via
id.  We also tag one or more points under the equipment that are meaningful
for the load.  Motors would often be tagged as loads since they draw energy, but
sensors would typically not be considered loads.
